default:
  image: webdevops/php:7.4

cache: &cache
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - .Build/
  policy: pull

.frontend-cache: &frontend-cache
  key: "${CI_COMMIT_REF_SLUG}-frontend"
  paths:
    - Resources/Private/Frontend/node_modules
  policy: pull

variables:
  COMPOSER_ALLOW_SUPERUSER: "1"
  COMPOSER_NO_INTERACTION: "1"
  GIT_CLONE_PATH: $CI_BUILDS_DIR/$CI_JOB_ID/$CI_PROJECT_PATH

stages:
  - build
  - lint
  - sca
  - test
  - release

build:
  stage: build
  script:
    - composer install --no-progress
  cache:
    <<: *cache
    policy: pull-push
  rules:
    - if: '$CI_COMMIT_BRANCH'
      when: on_success

build:frontend:
  stage: build
  image: node:buster
  script:
    - yarn install --frozen-lockfile --cwd Resources/Private/Frontend
  cache:
    <<: *frontend-cache
    policy: pull-push
  rules:
    - if: '$CI_COMMIT_BRANCH'
      when: on_success

build:ter:
  stage: build
  variables:
    BUILD_PATH: Resources/Private/Libs/Build
    LIB_PATH: Resources/Private/Libs
  script:
    - git reset --hard HEAD && git clean -dfx
    - composer global require clue/phar-composer
    - composer install -d $(pwd)/$BUILD_PATH
    - composer global exec phar-composer build $(pwd)/$BUILD_PATH $(pwd)/$LIB_PATH/vendors.phar
    - echo "\\EliasHaeussler\\Typo3Warming\\Configuration\\Extension::loadVendorLibraries();" >> ext_localconf.php
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    expire_in: 1 day
    paths:
      - Resources/Private/Libs/vendors.phar
      - ext_localconf.php
  rules:
    - if: '$CI_COMMIT_TAG'
      when: on_success

lint:php:
  stage: lint
  needs:
    - build
  script:
    - composer lint -- --dry-run
  rules:
    - if: '$CI_COMMIT_BRANCH'
      when: on_success

lint:composer:
  stage: lint
  needs:
    - build
  script:
    - composer normalize --dry-run
  rules:
    - if: '$CI_COMMIT_BRANCH'
      when: on_success

lint:editorconfig:
  stage: lint
  needs:
    - build
  script:
    - composer require --dev --no-progress armin/editorconfig-cli
    - >
      .Build/bin/ec \
        -e .Build \
        -e var \
        -e Resources/Private/Frontend/node_modules \
        -e Resources/Public/JavaScript \
        -e Resources/Public/Css
  rules:
    - if: '$CI_COMMIT_BRANCH'
      when: on_success

lint:scss:
  stage: lint
  image: node:buster
  needs:
    - build:frontend
  script:
    - yarn --cwd Resources/Private/Frontend lint:scss
  cache:
    <<: *frontend-cache
  rules:
    - if: '$CI_COMMIT_BRANCH'
      when: on_success

lint:typescript:
  stage: lint
  image: node:buster
  needs:
    - build:frontend
  script:
    - yarn --cwd Resources/Private/Frontend lint:ts
  cache:
    <<: *frontend-cache
  rules:
    - if: '$CI_COMMIT_BRANCH'
      when: on_success

sca:php:
  stage: sca
  needs:
    - build
  script:
    - composer sca -- --error-format gitlab > .Build/phpstan.json
  artifacts:
    reports:
      codequality: .Build/phpstan.json
  rules:
    - if: '$CI_COMMIT_BRANCH'
      when: on_success

test:unit:
  image: webdevops/php:${PHP_VERSION}
  stage: test
  before_script:
    - >
      if [ "$COVERAGE" == "1" ]; then
        pecl channel-update pecl.php.net
        pecl install pcov
        docker-php-ext-enable pcov
      fi
    - php --version
  script:
    - composer require --no-progress "typo3/cms-core:~${TYPO3_VERSION}.0"
    - >
      if [ "$COVERAGE" == "1" ]; then
        composer test:coverage
      else
        composer test
      fi
  parallel:
    matrix:
      - PHP_VERSION: ["7.3", "7.4"]
        TYPO3_VERSION: "10.4"
      - PHP_VERSION: "7.4"
        TYPO3_VERSION: "11.5"
      - PHP_VERSION: "8.0"
        TYPO3_VERSION: "11.5"
        COVERAGE: "1"
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'
  cache:
    <<: *cache
    key: "${CI_COMMIT_REF_SLUG}-${PHP_VERSION}-${TYPO3_VERSION}"
    policy: pull-push
  artifacts:
    reports:
      junit: .Build/log/coverage/junit.xml
  rules:
    - if: '$CI_COMMIT_BRANCH'
      when: on_success

release:gitlab:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - echo "Creating release for ${CI_COMMIT_TAG}"
  release:
    name: '${CI_COMMIT_TAG}'
    description: '${CI_COMMIT_TAG}'
    tag_name: '${CI_COMMIT_TAG}'
    ref: '${CI_COMMIT_TAG}'
  rules:
    - if: '$CI_COMMIT_TAG'
      when: on_success

release:ter:
  stage: release
  image: composer:2
  variables:
    TYPO3_EXCLUDE_FROM_PACKAGING: packaging_exclude.php
  dependencies:
    - build:ter
  before_script:
    - composer global require typo3/tailor
  script:
    # Prepare upload
    - echo "Preparing upload of release ${CI_COMMIT_TAG} to TER"
    - PREVIOUS_TAG="$(git describe --abbrev=0 --tags "${CI_COMMIT_TAG}^")"
    - CHANGELOG_URL="${CI_PROJECT_URL}/-/compare/${PREVIOUS_TAG}...${CI_COMMIT_TAG}"
    - /tmp/vendor/bin/tailor set-version "$CI_COMMIT_TAG" --no-docs
    # Run upload to TER
    - echo "Uploading release ${CI_COMMIT_TAG} to TER"
    - /tmp/vendor/bin/tailor ter:publish "$CI_COMMIT_TAG" --comment "See changelog at ${CHANGELOG_URL}"
  rules:
    - if: '$CI_COMMIT_TAG'
      when: on_success
